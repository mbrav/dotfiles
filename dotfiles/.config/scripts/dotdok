#!/usr/bin/env bash

# Set script_dir
script_dir="$(dirname "$(realpath "$0")")"
docker_tag="mbrav/dotfiles:latest"
uid=$(id -u)
gid=$(id -g)
user=$USER
cur_dir=$(pwd)

# Source util functions
source "${script_dir}/_util"

ran_col_str "Utility for running mbrav dotfiles inside an ephemeral docker container"

command -v docker >/dev/null || error_msg "Please install docker" 1

# Detect if running on macOS
if [[ "$(uname)" == "Darwin" ]]; then
	info_msg "Running on macOS, adjusting GID to 1000 avoid conflicts"
	gid="1000"
fi

info_msg "Using user: ${user}"
info_msg "UID/GID:    ${uid}/${gid}"
info_msg "Cur dir:    ${cur_dir}"
info_msg "Mount to:   /home/${user}/mount"

if docker image inspect "${docker_tag}" >/dev/null; then
	info_msg "Docker container present, skipping build"
else
	info_msg "No docker container, building..."
	docker build \
		--progress=plain \
		-f "${script_dir}/../../../Dockerfile" \
		--build-arg DOCKER_USER="${user}" \
		--build-arg DOCKER_UID="${uid}" \
		--build-arg DOCKER_GID="${gid}" \
		--tag "${docker_tag}" \
		"${script_dir}/../../../." &&
		success_msg "Container ${docker_tag} built"
fi

[[ $? -ne 0 ]] && error_msg "Failed to build image" 1

# Print mount if source exists
function mount_if() {
	# $1 - Source mount
	# $2 - Destination mount
	if [ -f "$1" ] || [ -d "$1" ]; then
		echo "--mount type=bind,source="${1}",target="${2}",readonly"
	fi
}

info_msg "Running ${docker_tag} interactively with ${cur_dir} as mount to /root/mount and user '${uid}:${gid}'"

docker run -it --rm \
	--name "tmp-${cur_dir##*/}" \
	--user "${uid}:${gid}" \
	--volume "${cur_dir}:/home/${user}/mount:rw" \
	$(mount_if "${HOME}/.wakatime.cfg" "/home/${user}/.wakatime.cfg") \
	$(mount_if "${HOME}/.ssh" "/home/${user}/.ssh") \
	$(mount_if "${HOME}/.gnupg" "/home/${user}/.gnupg") \
	"${docker_tag}" &&
	success_msg "Exited dotfiles container"

